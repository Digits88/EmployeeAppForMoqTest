//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeApplication.EmpPFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpPFService.IEmpPfDetails")]
    public interface IEmpPfDetails {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpPfDetails/IsPfEligible", ReplyAction="http://tempuri.org/IEmpPfDetails/IsPfEligibleResponse")]
        bool IsPfEligible(int empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpPfDetails/IsPfEligible", ReplyAction="http://tempuri.org/IEmpPfDetails/IsPfEligibleResponse")]
        System.Threading.Tasks.Task<bool> IsPfEligibleAsync(int empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpPfDetails/GetPfEmployerControlSofar", ReplyAction="http://tempuri.org/IEmpPfDetails/GetPfEmployerControlSofarResponse")]
        System.Nullable<double> GetPfEmployerControlSofar(int empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpPfDetails/GetPfEmployerControlSofar", ReplyAction="http://tempuri.org/IEmpPfDetails/GetPfEmployerControlSofarResponse")]
        System.Threading.Tasks.Task<System.Nullable<double>> GetPfEmployerControlSofarAsync(int empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpPfDetails/GetPfEmployeeControlSofar", ReplyAction="http://tempuri.org/IEmpPfDetails/GetPfEmployeeControlSofarResponse")]
        System.Nullable<double> GetPfEmployeeControlSofar(int empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpPfDetails/GetPfEmployeeControlSofar", ReplyAction="http://tempuri.org/IEmpPfDetails/GetPfEmployeeControlSofarResponse")]
        System.Threading.Tasks.Task<System.Nullable<double>> GetPfEmployeeControlSofarAsync(int empId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpPfDetailsChannel : EmployeeApplication.EmpPFService.IEmpPfDetails, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpPfDetailsClient : System.ServiceModel.ClientBase<EmployeeApplication.EmpPFService.IEmpPfDetails>, EmployeeApplication.EmpPFService.IEmpPfDetails {
        
        public EmpPfDetailsClient() {
        }
        
        public EmpPfDetailsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpPfDetailsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpPfDetailsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpPfDetailsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsPfEligible(int empId) {
            return base.Channel.IsPfEligible(empId);
        }
        
        public System.Threading.Tasks.Task<bool> IsPfEligibleAsync(int empId) {
            return base.Channel.IsPfEligibleAsync(empId);
        }
        
        public System.Nullable<double> GetPfEmployerControlSofar(int empId) {
            return base.Channel.GetPfEmployerControlSofar(empId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<double>> GetPfEmployerControlSofarAsync(int empId) {
            return base.Channel.GetPfEmployerControlSofarAsync(empId);
        }
        
        public System.Nullable<double> GetPfEmployeeControlSofar(int empId) {
            return base.Channel.GetPfEmployeeControlSofar(empId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<double>> GetPfEmployeeControlSofarAsync(int empId) {
            return base.Channel.GetPfEmployeeControlSofarAsync(empId);
        }
    }
}
